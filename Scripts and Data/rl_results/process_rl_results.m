datas = [
  % % 15 (10K)
  % [2904, 2383, 2228, 3733, 3351, 3466, 3982, 4134, 3817, 4611, 4592, 4665, 4790, 4817, 4889, 5249, 5200, 5380, 2450, 1283, 1234, 3266, 2323, 2284, 3883, 3234, 2897, 3551, 3400, 3500, 3812, 3618, 3367, 3900, 3630, 3484, -1, -1, 434, -1, 1299, -1, -1, 1984, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2083, 2384, 2400, 3551, 3367, 3451, 4179, 4000, 3917, 4418, 4585, 4400, 4852, 4617, 5233, 5193, 5199, 5385, 2234, 1232, 7917, 3267, 2149, 8500, 3371, 2668, -1, 3366, 2850, 9896, 3533, 3251, -1, 3648, 3433, -1, -1, 433, -1, -1, -1, -1, -1, -1, -1, -1, 1884, -1, -1, 2200, -1, -1, -1, -1, 2083, 2050, 2517, 2899, 2868, 2882, 3934, 4000, 4141, 4683, 4567, 4637, 4267, 5033, 4117, 4607, 5277, 5500, 1752, 9490, 8549, 2557, 9265, 8934, 2850, 2969, 8526, 3017, -1, 8924, -1, 2866, -1, -1, 3842, 9084, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % 15 (58K)
  [2001, 2049, 2221, 2699, 2717, 2583, 3067, 3175, 2867, 3383, 3417, 3441, 4083, 3539, 4089, 4416, 4216, 4192, 5333, 1035, 766, 6599, 2850, 1701, 6155, -1, 2640, 5373, -1, 3400, 4966, -1, 3699, 4841, -1, 3915, 5250, -1, 418, 7050, 1251, -1, 7648, -1, -1, 8434, -1, 1901, 8615, -1, 2452, 8381, -1, 3016, 2023, 1699, 1801, 2621, 2750, 2854, 3167, 3216, 3317, 3652, 3784, 3683, 3883, 3886, 4067, 4334, 4658, 4385, 4700, 800, -1, 6330, 1700, -1, 4783, 3051, 2316, 4351, -1, 2966, 4517, -1, 3383, 4452, -1, 3651, 5166, 385, -1, -1, 1000, -1, -1, 1350, -1, 8840, -1, -1, 8174, -1, -1, -1, -1, 2750, 1867, 1733, 1975, 2183, 2699, 2401, 3150, 3148, 2933, 2817, 3700, 2750, 3100, 3083, 3167, 3540, 3434, 3700, 6637, -1, -1, 4458, -1, -1, 4651, 1982, -1, 4455, 2817, 2567, 4625, 6883, 3390, 5050, -1, 3293, 1718, -1, -1, -1, -1, -1, -1, -1, -1, 6638, -1, -1, 8121, -1, -1, -1, -1, -1];
  % % 13 - 4 (9K)
  % [1905, 1951, 1968, 2548, 2468, 2601, 2933, 2916, 2857, 3433, 3284, 3349, 7842, 8853, 8018, 8510, 7818, 9187, 4619, 1167, 816, 4233, 2234, 1675, -1, 2901, -1, -1, 3117, -1, -1, 3416, -1, -1, 3640, -1, -1, -1, 385, -1, 1667, 933, -1, 2550, 1367, -1, 3667, -1, 7432, -1, -1, 7557, -1, -1, 1833, 1801, 1700, 2235, 2399, 2383, 2550, 2774, 2632, 3050, 3243, 3056, 6133, 6135, 6020, 6667, 6871, 6942, 8667, -1, 750, 4067, 1583, 1502, 3684, 2083, 2133, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 434, -1, -1, -1, -1, -1, -1, -1, -1, 1650, -1, -1, -1, -1, -1, -1, -1, 1468, 1765, 1884, 1716, 2367, 2562, 2316, 2283, 2350, 2500, 2517, 2447, 2799, 2801, 2800, 3257, 3067, 3200, 9988, -1, -1, 3820, -1, -1, 3615, -1, 1950, 3494, -1, 2226, -1, 2236, 2484, -1, 2351, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 13 - 4 (46K)
  % [2239, 2294, 2249, 2800, 2801, 2817, 3273, 3300, 3267, 3633, 3652, 3733, 9232, 3893, 9209, 4150, 4285, -1, 5553, 1117, -1, 4125, 2168, -1, 5500, 2983, -1, 4416, 3340, -1, -1, -1, -1, -1, 3967, -1, -1, -1, 366, -1, 1590, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2065, 1900, 1965, 2517, 2617, 2534, 3201, 3025, 3084, 3316, 3384, 3325, 3568, 3632, 3722, 3783, 3817, 3843, -1, 1049, 717, 3539, 1500, 1532, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 433, -1, -1, -1, 900, -1, -1, 1267, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1916, 1884, 2000, 2617, 2675, 2465, 3017, 3017, 3188, 7167, 2884, 6848, 2901, 7102, 3000, 7234, 3233, 3383, -1, -1, -1, 3267, -1, 1334, 3329, -1, 1875, 3118, -1, 2033, 3400, -1, 2535, 3802, 2771, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 17 (12K)
  % [1775, 1783, 2029, 2400, 2451, 2716, 3049, 3251, 3066, 3522, 3918, 3498, 4134, 3971, 4157, 5166, 5151, 5066, -1, 1184, 983, 5383, 2434, 1937, 4917, 3017, 2384, 4366, 3150, 2650, 3993, 3349, 2701, 4067, 3606, 2916, -1, 566, 434, -1, 1200, -1, -1, 1850, -1, -1, 2650, -1, -1, -1, -1, -1, -1, 2834, 1799, 1751, 2000, 2617, 2584, 2568, 3315, 3033, 3233, 3618, 3733, 3699, 3951, 4800, 4367, 5323, 4835, 4682, -1, -1, -1, 7334, 2066, -1, 4734, 2383, -1, 4617, 3101, 2049, 4767, -1, 2351, 4783, -1, 2457, -1, 401, -1, -1, -1, -1, -1, 1290, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1265, 1268, 1751, 2482, 2467, 2483, 2450, 2518, 2700, 2771, 2583, 2634, 3016, 2934, 2950, 3366, 3201, 3200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1983, -1, 6650, 2117, -1, 6183, 2367, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 17 (23K)
  % [1707, 1718, 1933, 2383, 2500, 2517, 2983, 2934, 3000, 3283, 3250, 3367, 3622, 3667, 3583, 4101, 4134, 3883, -1, 1166, 1050, 6867, 2434, 1735, 5766, 3034, 2400, 4800, 3342, 2583, 4517, 3383, 2769, -1, -1, 3017, -1, -1, 417, -1, 1366, -1, -1, 2133, -1, -1, 3033, -1, 6567, 3617, -1, 6466, -1, -1, 1800, 1700, 1684, 2466, 2634, 2442, 3133, 3016, 3000, 3434, 3449, 3433, 3984, 4633, 4184, 4534, 4766, 4550, -1, -1, -1, -1, 1768, -1, 5817, 2350, 1867, 4650, -1, 2133, 4667, -1, 2300, 5000, -1, 2534, -1, 417, -1, -1, -1, -1, -1, 1350, -1, -1, -1, -1, 8350, -1, -1, 8516, -1, -1, 1333, 1349, 1234, 2667, 2017, 2066, 2217, 2433, 2516, 2617, 2700, 2601, 2867, 3000, 2999, 3285, 3349, 3266, -1, -1, -1, -1, -1, -1, -1, 7416, -1, -1, 4300, -1, -1, 2150, 5242, 6866, 2385, 5115, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % 17 (60K)
  [2024, 2065, 2701, 2299, 2467, 2451, 2949, 2899, 2901, 3133, 3074, 3169, 3565, 3350, 3534, 3704, 3584, 3800, 8768, -1, 785, 6400, -1, 1707, -1, -1, 2433, -1, 3349, 2733, -1, -1, -1, -1, -1, -1, -1, -1, 399, -1, -1, -1, -1, -1, -1, -1, 8950, 1968, -1, -1, 2418, -1, -1, 9279, 1449, 1633, 1500, 2118, 2265, 2167, 2900, 2900, 2900, 6484, 7316, 3717, 6667, 6200, 6106, 7500, 6817, 6851, -1, -1, 750, 5499, 1601, 1400, 4817, 2710, 1949, -1, -1, -1, -1, -1, 9493, -1, -1, 8684, -1, 418, -1, -1, 995, -1, -1, 1349, -1, -1, -1, 9358, -1, -1, 1966, -1, -1, 9284, 1200, 1316, 1234, 1916, 1868, 1932, 2277, 2366, 2186, 2550, 2650, 2550, 6733, 2600, 6400, 3034, 6850, 2983, -1, -1, -1, -1, -1, -1, 5317, -1, -1, -1, 1817, 2134, 5199, 2034, 2384, 5866, 2266, 8083, -1, -1, -1, -1, -1, -1, -1, -1, 9918, 8683, -1, 8683, -1, -1, -1, -1, -1, 8086];
  % % 5 (42K)
  % [2690, 2467, 2318, 2965, 2937, 3017, 3284, 3366, 3216, 7050, 3554, 5851, 3884, 3700, 3933, 4052, 4058, 4102, 4984, 1601, 967, 6932, -1, 1933, 5168, 3801, 2700, 5617, 4252, 3351, -1, 4133, 3700, 5684, -1, 3900, -1, -1, 386, -1, 1400, -1, -1, -1, -1, -1, -1, -1, 8033, -1, -1, 7450, -1, -1, 2782, 2249, 2468, 3583, 2633, 2784, 3517, 3333, 4017, 3550, 3600, 3700, 3900, 3767, 4067, 4310, 4217, 4134, 4400, -1, -1, 5102, -1, -1, 4545, -1, -1, 4268, -1, -1, -1, 3925, -1, -1, -1, -1, -1, 433, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3100, -1, 2186, 2249, 2100, 2800, 2816, 2635, 3249, 3433, 3134, 3550, 3317, 3633, 4041, 3815, 3751, 4152, 4002, 3983, 1952, -1, -1, 3400, -1, -1, 3867, -1, -1, 3667, -1, -1, 3632, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 18 (16K)
  % [2846, 1959, 2017, 2383, 2610, 2427, 2792, 2783, 2882, 3221, 3140, 3090, 3579, 3524, 3449, 3526, 3966, 3803, 8304, 1226, 812, 5872, 2605, 1731, 6018, 3144, 2469, -1, 3683, 2769, -1, 3716, 2915, 4558, -1, -1, -1, -1, 392, -1, -1, 894, -1, -1, 1589, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1884, 2030, 1912, 3058, 2797, 2692, 3441, 3281, 3519, 4091, 4020, 3368, 4631, 4393, 4420, 4758, 4956, 5018, 9005, 837, -1, 7725, 1789, 1597, 5146, 3125, 2091, -1, 4856, -1, 5121, 5554, 2719, -1, 6184, 3767, -1, 429, -1, -1, 895, -1, -1, 1349, -1, -1, -1, 1676, -1, -1, 2050,-1, -1, 2345, 2338, 2152, 2090, 2996, 3095, 2915, 3609, 3749, 3914, 4178, 4262, 4138, 4716, 4682, 4531, 5011, 4925, 4849, -1, 9544, -1, 9440, 6433, -1, 6119, 1599, -1, 5248, -1, -1, 5412, -1, 2663, 6288, 9113, 3096, -1, -1, -1, -1, -1, -1, -1, 4608, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
  % % 18 (23K)
  % [3288, 1908, 2176, 2761, 2524, 2539, 2850, 2889, 2966, 3503, 3557, 3257, 3778, 3615, 3400, 3579, 3775, 3762, -1, 1450, 745, 9911, 2774, 1801, 9726, 3467, 2433, 9085, 3929, 2674, 7594, 3996, 2827, 7441, 3748, 2932, -1, -1, 388, -1, -1, 919, -1, -1, 1361, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2297, 2130, 2022, 3039, 2719, 2877, 3621, 3340, 3223, 3873, 3916, 3948, 4816, 4316, 4367, 5057, 4742, 5409, -1, 1045, 762, -1, 1989, 1708, 8621, 2959, 2210, 6500, 4352, 2442, 5931, 5969, 2694, 6125, 7469, 2919, -1, 405, -1, -1, 917, -1, -1, 1242, -1, -1, -1, 1645, -1, -1, 2020, -1, -1, 2303, 2229, 2114, 2282, 3509, 3456, 3039, 3955, 3710, 3752, 4282, 4158, 4336, 4621, 4633, 4667, 4847, 4898, 4903, -1, 8851, -1, -1, 2563, -1, -1, 1825, -1, 6473, -1, -1, 6477, -1, 2887, 6696, 8386, 3086, -1, -1, -1, -1, -1, -1, -1, 4344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % 18 (31K)
  [2590, 2430, 2166, 2710, 2650, 2500, 2750, 2984, 3233, 3151, 3028, 3339, 3467, 3468, 3405, 3784, 3623, 3767, -1, 1365, 768, -1, 2750, 1719, -1, 3678, 2388, -1, 3934, 2803, 8963, 4168, 2951, 8400, 4288, 3062, -1, -1, 384, -1, 1601, 867, -1, 2635, 1316, -1, 3539, 1901, -1, -1, 2422, -1, -1, 2976, 2150, 2140, 2220, 3050, 3033, 2984, 3335, 3417, 3415, 4122, 3605, 3767, 4267, 4217, 4485, 5082, 4548, 4775, -1, 984, -1, -1, 1817, -1, -1, 2671, 2316, 8423, 3257, -1, 6544, 6417, 2890, 6135, 6010, -1, -1, 434, -1, -1, 1023, -1, -1, 1233, -1, -1, -1, -1, -1, 4152, 2050, -1, 7178, 2503, 2397, 2316, 2434, 3483, 3551, 3317, 3897, 3918, 4169, 4329, 4408, 4367, 4501, 4667, 4628, 4990, 4917, 4917, -1, -1, -1, -1, -1, -1, -1, 1826, -1, 7533, -1, 3061, 6907, -1, 3300, 7043, -1, 3550, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6784, -1, -1, 4487, -1, -1, -1, -1]
  % % 18 (66K)
  % [2570, 2217, 2084, 2534, 2568, 2871, 3234, 2790, 2784, 3134, 3200, 3168, 3305, 3314, 3334, 3550, 3569, 3632, -1, 1166, 801, -1, 2534, 1767, -1, 3617, 2518, 8150, 3750, 2819, 6203, 3800, 3083, 5833, 4200, 3318, -1, -1, 384, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2235, 2232, 2133, 2768, 2900, 2667, 3367, 3201, 3173, 3433, 3550, 3717, 3800, 4016, 3929, 4519, 4399, 4101, -1, -1, -1, -1, 1817, 1799, -1, 2683, 2467, 9550, 4100, 2850, 8702, 4150, 3317, 7683, 5550, 4273, -1, 350, -1, -1, 783, -1, -1, -1, 1266, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2399, 2382, 2084, 2966, 3200, 3168, 3675, 3516, 3490, 3864, 3885, 4099, 4184, 4417, 4400, 4717, 4651, 4882, -1, -1, -1, -1, -1, -1, -1, 1802, 2205, -1, -1, 3384, -1, -1, -1, 8651, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2384];
  % 19 (9K)
  [1862, 1899, 1851, 2550, 2784, 2817, 2932, 3318, 3100, 3527, 3368, 3434, 4266, 4401, 4500, 5018, 5136, 5083, 4417, -1, 800, 4853, -1, 1751, 3666, 5268, 2454, 3663, 4950, 2835, 3766, 4935, 3300, 3751, 7200, -1, -1, 2438, 417, -1, 3751, -1, -1, 8417, -1, 9684, 9684, 1933, 6370, 8185, 2415, 5934, 7753, 2950, 2026, 1767, 1934, 2650, 2800, 2799, 3501, 3400, 3400, 4034, 3983, 3951, 4600, 4715, 4568, 3033, 5766, 5542, 6967, 819, 7600, 5015, -1, 1416, 3968, -1, 1784, 4633, -1, 2117, 4818, 7666, 2184, 6583, 7951, 2450, -1, 400, -1, -1, 951, -1, -1, 1118, -1, -1, 1400, -1, 8627, -1, -1, 9085, -1, 2134, 1317, 1268, 1448, 2683, 1901, 1899, 2342, 2366, 2368, 2749, 2551, 2701, 2964, 2818, 2767, 3216, 3167, 3284, 4785, 3900, 8365, 7451, -1, 3018, 5400, 1600, 2467, 5400, 1900, 2839, 5957, 2185, 4967, 7017, 2333, 5268, -1, -1, -1, -1, 9001, -1, -1, 3816, -1, -1, -1, -1, -1, -1, 7583, -1, -1, 6349]
  % % 19 (39K)
  % [1826, 1850, 1833, 2335, 2383, 2334, 3065, 2684, 2867, 3061, 3300, 3182, 3318, 3400, 3633, 3550, 3866, 4087, 8154, 1833, 767, 3933, 3251, 1516, 3883, 3802, 2167, 3962, 3932, 2517, 3952, -1, -1, -1, -1, -1, -1, 1983, 401, -1, 3066, -1, -1, 3866, -1, -1, 4549, 1718, -1, 8065, -1, -1, 6150, -1, 1684, 1666, 1717, 2450, 2283, 2350, 2600, 2567, 3000, 3267, 3833, 3434, 4349, 4117, 3951, 4982, 4958, 5201, 7358, 1033, -1, 3967, 1182, 1267, 3751, 1600, 1766, -1, 4120, 1865, -1, 4351, 2150, -1, 5266, 2334, -1, 435, -1, -1, 917, -1, -1, 1118, -1, -1, 1402, -1, -1, 1641, -1, -1, 1767, -1, 1633, 1118, 1365, 1800, 1800, 1800, 2183, 2234, 2102, 2484, 2418, 2484, 2735, 2860, 2734, 3301, 3199, 3300, -1, -1, -1, 3735, -1, -1, 3854, 4420, -1, 4467, 3967, 5001, -1, -1, 4610, -1, 7501, 5185, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 19 (49K)
  % [1949, 1951, 1982, 2385, 2383, 2502, 2767, 2949, 2801, 3200, 3108, 3118, 3465, 3394, 3400, 3735, 3665, 3717, 2733, 1734, 767, 3569, 2943, 1584, -1, -1, 2228, 4033, 3550, 2784, -1, -1, 2968, -1, -1, -1, -1, -1, 383, -1, -1, 833, -1, -1, 1254, -1, 5950, -1, -1, -1, -1, -1, -1, -1, 1766, 1667, 1834, 2349, 2400, 2400, 2891, 2855, 2799, 3751, 3133, 3366, 4228, 4151, 3636, 5215, 4817, 5383, 2851, 1484, -1, 3116, 1233, -1, -1, -1, 1601, -1, -1, 1850, -1, -1, 2100, -1, -1, 2407, -1, 401, -1, -1, 768, -1, -1, 1080, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1384,1218, 1278, 1718, 1866, 1782, 2225, 2085, 2149, 2550, 2384, 2439, 2668, 2755, 2831, 3134, 3034, 3232, 7968, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4950, -1, -1, 5516, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  % % 20 
  % [2421, 2227, 2668, 3417, 3033, 2869, 3387, 3051, 3766, 4034, 3834, 3683, 4285, -1, -1, -1, -1, -1, -1, -1, 1000, -1, -1, 2000, -1, -1, 2999, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1001, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6335, 10000, 4000, -1, -1, 8668, 9001, -1, -1, 9670, -1, 9667, -1, -1, -1, -1, 4790, 4801, -1, 1043, -1, -1, 1787, -1, -1, 1983, -1, -1, 1866, -1, -1, 2117, -1, -1, 2333, -1, -1, 400, -1, -1, 817, -1, -1, 1132, -1, -1, 1383, -1, -1, 1617, -1, -1, 1817, -1, 3366, 1184, 1450, 1833, 2055, 1793, 2250, 3850, 2227, 2807, 2733, 2600, 2968, 3000, 2966, 3104, 3118, 3073, -1, -1, -1, -1, -1, -1, -1, 4904, -1, 1868, -1, -1, 2166, -1, -1, 2359, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
  % % 21 (10K)
  % [2495, 2266, 2301, 2750, 2918, 3100, 3532, 3468, 3270, 3617, 3834, 3817, 4099, 4100, 4080, 4651, 4449, 4701, 2685, 1181, 967, 3617, 2735, 2115, 4354, 3501, 2983, 4067, 3467, 3604, 4066, 3919, 3909, 4051, 4235, 4423, -1, -1, 401, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2450, 2034, 2134, 2999, 3000, 3038, 3619, 3381, 3419, 3864, 3868, 3916, 4401, 4483, 4468, 4932, 5129, 5203, 2386, 1000, 7867, 3488, 1934, 1853, 3516, 2919, 2771, 3870, 3934, 3482, -1, 4151, 4381, 5023, -1, 4767, -1, 405, -1, -1, 852, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1878, 1900, 1933, 3183, 2886, 3136, 3500, 3562, 3815, 3935, 3617, 3566, 4036, 4033, 4416, 4401, 4400, 4409, 2716, 7456, 7783, -1, 3666, 5338, 3969, 1682, 2884, -1, 2184, 3208, -1, 2250, 2835, -1, 2501, 3278, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
  % % 21 (24K)
  % [3522, 3390, 3226, 3916, 3950, 3750, 4333, 4117, 4084, 4163, 4625, 4181, 4550, 4798, 4750, 4766, 4567, 4789, 4235, 1217, 883, 4767, 2416, 2034, 5904, 3615, -1, 7109, 4516, -1, -1, -1, -1, -1, -1, -1, -1, -1, 440, -1, 1283, -1, -1, -1, 1468, -1, -1, 2037, -1, -1, 2710, -1, -1, 3282, 2983, 2934, 3102, 3614, 3601, 3551, 3814, 3942, 3821, 4084, 4127, 4082, 4469, 4332, 4299, 4626, 4600, 4600, 3817, 9102, -1, -1, 1849, 1751, -1, 3102, 2533, 4617, 3567, 3334, -1, -1, -1, -1, -1, -1, -1, 433, -1, -1, -1, -1, -1, 1517, -1, -1, 2136, -1, -1, -1, 2256, -1, -1, 2659, 2661, 2386, 2492, 3209, 3483, 3950, 4067, 4201, 4080, 4265, 4352, 5066, 4601, 4667, 4540, 4922, 4865, 4744, 2267, -1, -1, 4600, 7135, 8775, -1, 2065, 8714, -1, 2550, 9801, -1, 3222, 3333, -1, 4017, 3785, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]

];

% Predefined parameters
directions = [1.57, 2.36, 2.79];
distances = [100, 200, 300, 400, 500, 600];
speeds = [0, 100, 200];
direction_locations = [-0.393, -0.785, -1.178];

distance_speed_percentages = zeros(size(datas, 1), length(speeds), length(distances));

direction_mits = zeros(size(datas, 1), length(directions));
direction_percentages = zeros(size(datas, 1), length(directions));

distance_mits = zeros(size(datas, 1), length(distances));
distance_percentages = zeros(size(datas, 1), length(distances));

speed_mits = zeros(size(datas, 1), length(speeds));
speed_percentages = zeros(size(datas, 1), length(speeds));

direction_location_mits = zeros(size(datas, 1), length(direction_locations));
direction_location_percentages = zeros(size(datas, 1), length(direction_locations));

for i = 1:size(datas, 1)
  data = datas(i, :);

  length(data)

  percentage = round(numel(find(data ~= -1)) / length(data) * 100, 2);
  total_mit = round(sum(data(data ~= -1)) / numel(find(data ~= -1)));

  k = 1; % Index for data array

  distance_speed_mit = zeros(1, length(distances) * length(speeds));
  distance_speed_percentage = zeros(1, length(distances) * length(speeds));

  nr_test_runs = 10;

  % Nested loops to accumulate metrics
  for o = 1:length(direction_locations)
    for n = 1:length(speeds)
      for m = 1:length(distances)
        for l = 1:length(directions)
          if data(k) ~= -1
            p = (n-1)*length(distances) + m;

            if n == 2 && l == 1 && o == 1
              k
            end

            speed_mits(i, n) = speed_mits(i, n) + data(k);
            distance_mits(i, m) = distance_mits(i, m) + data(k);
            direction_mits(i, l) = direction_mits(i, l) + data(k);
            direction_location_mits(i, o) = direction_location_mits(i, o) + data(k);
            distance_speed_mit(p) = distance_speed_mit(p) + data(k);

            speed_percentages(i, n) = speed_percentages(i, n) + 1;
            distance_percentages(i, m) = distance_percentages(i, m) + 1;
            direction_percentages(i, l) = direction_percentages(i, l) + 1;
            direction_location_percentages(i, o) = direction_location_percentages(i, o) + 1;
            distance_speed_percentage(p) = distance_speed_percentage(p) + 1;
          end

          k = k + 1; % Increment data index
        end
      end
    end
  end

  % Normalize metrics
  num_direction = length(distances) * length(speeds) * length(direction_locations);
  num_distance = length(directions) * length(speeds) * length(direction_locations);
  num_speed = length(distances) * length(directions) * length(direction_locations);
  num_direction_location = length(distances) * length(directions) * length(speeds);
  num_speed_distance = length(directions) * length(direction_locations);

  speed_mits(i,:) = round(speed_mits(i,:) / num_speed);
  speed_percentages(i,:) = round(speed_percentages(i,:) / num_speed * 100, 1);

  distance_mits(i,:) = round(distance_mits(i,:) / num_distance);
  distance_percentages(i,:) = round(distance_percentages(i,:) / num_distance * 100, 1);

  direction_mits(i,:) = round(direction_mits(i,:) / num_direction);
  direction_percentages(i,:) = round(direction_percentages(i,:) / num_direction * 100, 1);

  direction_location_mits(i,:) = round(direction_location_mits(i,:) / num_direction_location);
  direction_location_percentages(i,:) = round(direction_location_percentages(i,:) / num_direction_location * 100, 1);

  distance_speed_mit = round(distance_speed_mit / num_speed_distance);
  distance_speed_percentage = round(distance_speed_percentage / num_speed_distance * 100, 1);

  for o = 1:length(speeds)
    idx = (o-1)*length(distances) + 1;
    distance_speed_percentages(i,o,:) = distance_speed_percentage(idx:idx+length(distances)-1);
  end

  % Print results
  fprintf('\nDataset %d Results:\n', i);
  fprintf('Overall Percentage: %.1f%%\n', percentage);
  fprintf('Total MIT: %d\n\n', total_mit);

  fprintf('Speed Metrics:\n');
  for n = 1:length(speeds)
      fprintf('%d (%.1f\\%%)\n', speed_mits(i, n), speed_percentages(i, n));
  end

  fprintf('\nDistance Metrics:\n');
  for m = 1:length(distances)
      fprintf('%d (%.1f\\%%)\n', distance_mits(i, m), distance_percentages(i, m));
  end

  fprintf('\nDirection Metrics:\n');
  for l = 1:length(directions)
      fprintf('%d (%.1f\\%%)\n', direction_mits(i, l), direction_percentages(i, l));
  end

  fprintf('\nLocation Direction Metrics:\n');
  for l = 1:length(directions)
      fprintf('%d (%.1f\\%%)\n', direction_location_mits(i, l), direction_location_percentages(i, l));
  end
end

close all;

colors = [0.1 0.1 0.1;    % Dark gray
          0.3 0.3 0.3;    % Medium gray
          0.5 0.5 0.5;    % Light gray
          0.7 0.7 0.7];   % Very light gray

figure;
barplot = bar(speed_percentages');
barplot(4).FaceColor = [.2 .6 .5];
name={'$0$', '$100$', '$200$'};
set(gca, 'xticklabel', name);
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'northeast')
ylabel("Successful intercepts (%)");
xlabel("Ball velocity [cm/s]") 
ylim([0, 105]);
saveas(gcf,"figures/rl_training_results_velocity",'svg');

figure;
barplot = bar(distance_percentages', 0.7, GroupWidth=0.8);
barplot(4).FaceColor = [.2 .6 .5];
name={'$100$', '$200$', '$300$', '$400$', '$500$', '$600$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'southeast')
ylabel("Successful intercepts (%)");
xlabel("Initial ball distance [cm]") 
ylim([0, 105]);
saveas(gcf,"figures/rl_training_results_distance",'svg');

figure;
barplot = bar(direction_percentages');
barplot(4).FaceColor = [.2 .6 .5];
name={'$\pi/8$', '$\pi/4$', '$3\pi/8$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'southeast')
ylabel("Successful intercepts (%)");
xlabel("Ball movement direction [rad]")
ylim([0, 105]);
saveas(gcf,"figures/rl_training_results_movement_direction",'svg');

figure;
barplot = bar(direction_location_percentages');
barplot(4).FaceColor = [.2 .6 .5];
name={'$-\pi/2$', '$-3\pi/4$', '$-8\pi/9$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'southwest')
ylabel("Successful intercepts (%)");
xlabel("Initial ball direction [rad]")
ylim([0, 105]);
saveas(gcf,"figures/rl_training_results_location_direction",'svg');












figure;
barplot = bar(speed_mits');
barplot(4).FaceColor = [.2 .6 .5];
name={'$0$', '$100$', '$200$'};
set(gca, 'xticklabel', name);
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'northeast')
ylabel("Mean intercept time (ms)")
xlabel("Ball velocity [cm/s]") 
ylim([0, 5000]);
saveas(gcf,"figures/rl_training_results_velocity_mit",'svg');

figure;
barplot = bar(distance_mits', 0.7, GroupWidth=0.8);
barplot(4).FaceColor = [.2 .6 .5];
name={'$100$', '$200$', '$300$', '$400$', '$500$', '$600$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'southeast')
ylabel("Mean intercept time (ms)")
xlabel("Initial ball distance [cm]") 
ylim([0, 5000]);
saveas(gcf,"figures/rl_training_results_distance_mit",'svg');

figure;
barplot = bar(direction_mits');
barplot(4).FaceColor = [.2 .6 .5];
name={'$\pi/8$', '$\pi/4$', '$3\pi/8$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'northeast')
ylabel("Mean intercept time (ms)")
xlabel("Ball movement direction [rad]")
ylim([0, 5000]);
saveas(gcf,"figures/rl_training_results_movement_direction_mit",'svg');

figure;
barplot = bar(direction_location_mits');
barplot(4).FaceColor = [.2 .6 .5];
name={'$-\pi/2$', '$-3\pi/4$', '$-8\pi/9$'};
set(gca, 'TickLabelInterpreter', 'latex');
set(gca, 'xticklabel', name);
set(gca, 'fontsize', 20);
set(gca,'fontname','Linux Libertine');
% legend({'Policy 1', 'Policy 2', 'Policy 3', 'Policy 4'}, 'Location', 'northeast')
ylabel("Mean intercept time (ms)")
xlabel("Initial ball direction [rad]")
ylim([0, 5000]);
saveas(gcf,"figures/rl_training_results_location_direction_mit",'svg');
